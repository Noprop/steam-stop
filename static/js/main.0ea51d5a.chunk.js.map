{"version":3,"sources":["firebase.js","components/header/Navigation.js","components/header/Wishlist.js","components/header/Banner.js","components/header/Header.js","components/main/Search.js","components/main/Item.js","components/main/Content.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Navigation","className","href","Component","Wishlist","displayWishlist","setState","display","state","games","database","ref","on","snapshot","dataObj","val","gameList","gameKey","push","icon","onClick","this","aria-label","map","game","src","alt","props","removeFromWishlist","Banner","Header","Search","handleInputChange","e","target","value","type","checked","name","handleSubmit","preventDefault","handleFilterGames","sortBy","freeGames","onSubmit","htmlFor","onChange","Item","dbKey","addToWishlist","owners","price","header_img","ownerArray","toString","split","i","length","splice","Content","handleShowMoreGames","howManyGames","outputGamesArray","addGames","slice","filter","gameListRef","orderByChild","findGames","includeFreeGames","once","gamesToState","forEach","childSnapshot","childKey","key","childData","reverse","filterGames","appid","Footer","library","add","fab","faHeart","faTimes","faTrash","App","wishlist","alert","wishlistRef","gameRef","logo_img","wishlistObj","update","onWishlist","stateWishlist","set","dbRef","data","timeNow","Date","now","firebaseDataObj","time","axios","method","url","responseType","then","res","dataObject","item","child","undefined","console","log","dataKey","discount","gameDiscount","parseInt","gamePrice","oldOwners","owners1","replace","owners2","newOwners","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ea51d5a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCdjnBKt1uXrJZHiQcH4JGUNcuN88jqvtQ\",\r\n  authDomain: \"steam-stop.firebaseapp.com\",\r\n  databaseURL: \"https://steam-stop.firebaseio.com\",\r\n  projectId: \"steam-stop\",\r\n  storageBucket: \"steam-stop.appspot.com\",\r\n  messagingSenderId: \"837369691163\",\r\n  appId: \"1:837369691163:web:5898435137c592b79f0cbe\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import { Component } from 'react';\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"navigation\">\r\n        <li><a href=\"#\">Home</a></li>\r\n        <li><a href=\"#\">Shop</a></li>\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation;","import { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import Item from '../main/Item';\r\nimport firebase from '../../firebase';\r\n\r\nclass Wishlist extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      display: false,\r\n      games: []\r\n    }\r\n  }\r\n\r\n  // check wishlist object on database and add any values to state and then display in render method\r\n  componentDidMount() {\r\n    const wishlistRef = firebase.database().ref('wishlist');\r\n\r\n    wishlistRef.on('value', snapshot => {\r\n      // console.log(snapshot.val());\r\n      const dataObj = snapshot.val();\r\n      // console.log(dataObj);\r\n      if (dataObj === null) {\r\n        this.setState({\r\n          games: 0\r\n        })\r\n      }\r\n      const gameList = [];\r\n      for (const gameKey in dataObj) {\r\n        // console.log(dataObj[gameKey]);\r\n        gameList.push(dataObj[gameKey]);\r\n        this.setState({\r\n          games: gameList\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  displayWishlist = () => {\r\n    this.setState({\r\n      display: !this.state.display\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"wishlistContainer\">\r\n        <FontAwesomeIcon \r\n          icon=\"heart\" \r\n          onClick={() => this.displayWishlist()} \r\n          className={`${this.state.display ? \"hidden\" : \"\"}`}\r\n          aria-label=\"Wishlist\"\r\n        />\r\n        <div className={`${this.state.display ? \"displayWishlist\" : \"hidden\"}`}>\r\n          <FontAwesomeIcon icon=\"times\" onClick={() => this.displayWishlist()} />\r\n          {\r\n            this.state.games !== 0\r\n              ? this.state.games.map(game => {\r\n                return (\r\n                  <div className=\"gameContainer\" key={game[0]}>\r\n                    <div className=\"game\">\r\n                      <div className=\"logoContainer\">\r\n                        <img src={game[3]} alt={`Logo of ${game[1]}`} />\r\n                      </div>\r\n                      <p>Price: ${game[2] / 100}</p>\r\n                    </div>\r\n                    <FontAwesomeIcon icon=\"trash\" onClick={() => this.props.removeFromWishlist(game[0])} />\r\n                  </div>\r\n                )\r\n              })\r\n              : <h4>Add some games to the wish list!</h4>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Wishlist;","import { Component } from 'react';\r\n\r\nclass Banner extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"banner\">\r\n        {/* <h1>Keyboards.</h1> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Banner;","import { Component } from 'react';\r\nimport Navigation from './Navigation';\r\nimport Wishlist from './Wishlist';\r\nimport Banner from './Banner';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <nav>\r\n          <Navigation />\r\n          <Wishlist removeFromWishlist={this.props.removeFromWishlist} />\r\n        </nav>\r\n        <Banner />\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      sortBy: false,\r\n      freeGames: false\r\n    }\r\n  }\r\n  handleInputChange = e => {\r\n    const target = e.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    \r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.handleFilterGames(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"search\" onSubmit={this.handleSubmit} >\r\n        <label htmlFor=\"radioOwners\">Sort by owners\r\n          <input \r\n            type=\"radio\" \r\n            name=\"sortBy\" \r\n            value=\"owners\" \r\n            checked={this.state.sortBy === 'owners'}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <span className=\"newRadio\"></span>\r\n        </label>\r\n        <label htmlFor=\"radioPrice\">Sort by price\r\n          <input \r\n            type=\"radio\" \r\n            name=\"sortBy\" \r\n            value=\"price\" \r\n            checked={this.state.sortBy === 'price'}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <span className=\"newRadio\"></span>\r\n        </label>\r\n        <label htmlFor=\"freeGames\">Include free games\r\n          <input \r\n            type=\"checkbox\" \r\n            name=\"freeGames\" \r\n            value=\"freeGames\" \r\n            checked={this.state.freeGames}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button value=\"submit\">Submit</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","const Item = ({ game, dbKey, addToWishlist }) => {\r\n  const { name, owners, price, header_img } = game;\r\n\r\n  // convert to string with commas for better readability \r\n  let ownerArray = (owners.toString()).split(\"\");\r\n  for (let i = ownerArray.length - 3; i > 0; i -= 3) {\r\n    ownerArray.splice(i, 0, \",\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <img src={header_img} alt=\"testing\"/>\r\n      <div className=\"title\">\r\n        <p>{name}</p>\r\n      </div>\r\n      <p>{ownerArray}~ owners</p>\r\n      <p>${price / 100}</p>\r\n      <button onClick={() => addToWishlist(dbKey, game)}>Add to wish list</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;","import { Component } from 'react';\r\nimport Search from './Search';\r\nimport Item from './Item';\r\nimport firebase from '../../firebase';\r\n\r\nclass Content extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      games: [],\r\n      outputGamesArray: [], \r\n      howManyGames: 9,\r\n      filterGames: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // set db ref to gamesList\r\n    const gameListRef = firebase.database().ref('gameList/');\r\n    this.findGames(gameListRef, false);\r\n  }\r\n\r\n  // functionality for Load More button\r\n  handleShowMoreGames = () => {\r\n    const { games, howManyGames, outputGamesArray } = this.state; // gets current state values\r\n    const addGames = games.slice(howManyGames, howManyGames + 9); // finds the next 9 games\r\n    this.setState({\r\n      outputGamesArray: [...outputGamesArray, ...addGames] // sets the next 9 games\r\n    })\r\n    this.setState({\r\n      howManyGames: howManyGames + 9 // gets ready for the next load\r\n    })\r\n  }\r\n\r\n  handleFilterGames = filter => {\r\n    if (filter.sortBy === \"owners\") {\r\n      const gameListRef = firebase.database().ref('gameList/').orderByChild('owners');\r\n      this.findGames(gameListRef, filter.freeGames);\r\n    } else if (filter.sortBy === \"price\") {\r\n      const gameListRef = firebase.database().ref('gameList/').orderByChild('price');\r\n      this.findGames(gameListRef, filter.freeGames);\r\n    }\r\n  }\r\n\r\n  findGames = (gameListRef, includeFreeGames) => { \r\n    gameListRef.once('value', snapshot => {\r\n      let gamesToState = [];\r\n      \r\n      if (includeFreeGames) {\r\n        snapshot.forEach(childSnapshot => {\r\n          const childKey = childSnapshot.key;\r\n          const childData = childSnapshot.val();\r\n          gamesToState.push([childKey, childData]);   \r\n        })    \r\n      } else {\r\n        snapshot.forEach(childSnapshot => {\r\n          const childKey = childSnapshot.key;\r\n          const childData = childSnapshot.val();\r\n          if (childData.price > 0) {\r\n            gamesToState.push([childKey, childData]);\r\n          }\r\n        })\r\n      }\r\n      gamesToState.reverse();\r\n      // this.state.games holds all the games that have been retrieved from the database\r\n      // this.state.outputGamesArray only holds the ones that are actually displayed\r\n      this.setState({\r\n        games: gamesToState\r\n      })\r\n      this.setState({\r\n        outputGamesArray: gamesToState.slice(0, 8)\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <section className=\"gamesOutput\">\r\n          <Search handleFilterGames={this.handleFilterGames} />\r\n          {\r\n            this.state.outputGamesArray.map(game => {\r\n              return (\r\n                <Item key={game[1].appid} game={game[1]} dbKey={game[0]} addToWishlist={this.props.addToWishlist} />\r\n              ) \r\n            })\r\n          }\r\n        </section>\r\n        <button className=\"loadMore\" onClick={this.handleShowMoreGames}>Load More</button>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <p>Made by Greg Forster at Juno College 2020</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import './App.css';\nimport { Component } from 'react';\nimport firebase from './firebase';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faHeart, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\n// Components\nimport Header from './components/header/Header';\nimport Content from './components/main/Content';\nimport Footer from './components/Footer';\n\nlibrary.add(fab, faHeart, faTimes, faTrash);\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      games: null,\n      wishlist: {}\n    }\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n    const gameListRef = firebase.database().ref('gameList');\n    const wishlistRef = firebase.database().ref('wishlist');\n\n    // load any items on the db wishlist object onto state \n    wishlistRef.once('value', snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        this.setState({\n          wishlist: data\n        })\n      }\n    })\n\n    const timeNow = Date.now();\n\n    dbRef.once('value', (data) => {\n      const firebaseDataObj = data.val();\n\n      if (timeNow > (firebaseDataObj.time + 3000000000)) { // 24 hours is: 84 000 000\n        dbRef.update({\n          time: timeNow\n        })\n\n        // axios request to get most popular games of the last two weeks, on a rolling 24hrs basis\n        // if value is modified above, this is currently disabled because api has had issues\n        axios({\n          method: 'GET',\n          url: 'https://cors-anywhere.herokuapp.com/https://steamspy.com/api.php?request=top100in2weeks',\n          responseType: 'json'\n        }).then(res => { // yes everything is in the .then (the site is not currently using this api but it's fairly straightforward to turn on, as long as the endpoint still works), in the future I would put all of this code somewhere else, possibly in a seperate exclusively js file.\n          const dataObject = res.data;\n          // this clears the database... be careful! (have had issues with api in past)\n          // gameListRef.set({ \n          //   gameList: 0\n          // }) \n        \n          // giving all games in the database a logo!!\n          // I spent about 3 hours trying to find this endpoint... lol. \n          // when I first realized that I didn't have images I thought I was going to have to give up the idea\n          gameListRef.once('value', snapshot => {\n            const data = snapshot.val();\n            for (const dbKey in data) {\n              if (!data[dbKey].logo_img) {\n                const appId = data[dbKey].appid;\n                const gameRef = gameListRef.child(dbKey);\n\n                gameRef.update({\n                  \"logo_img\": `https://cdn.cloudflare.steamstatic.com/steam/apps/${appId}/logo.png`\n                })\n              }\n            }\n          })\n\n          // giving all games in the database a header\n          gameListRef.once('value', snapshot => {\n            const data = snapshot.val();\n            for (const dbKey in data) {\n              if (!data[dbKey].header_img) {\n                const appId = data[dbKey].appid;\n                const gameRef = gameListRef.child(dbKey);\n\n                gameRef.update({\n                  \"logo_img\": `https://steamcdn-a.akamaihd.net/steam/apps/${appId}/header.jpg`\n                })\n              }\n            }\n          })\n\n          // this is to init all games with onWishlist: false\n          gameListRef.once('value', snapshot => {\n            const data = snapshot.val();\n            for (const dbKey in data) {\n              // console.log(data[dbKey]);\n              if (data[dbKey].onWishlist === undefined) {\n                console.log(\"we're in\");\n                const gameRef = gameListRef.child(dbKey);\n                gameRef.update({\n                  \"onWishlist\": false\n                })\n              }\n            }\n          })\n\n          // this is for converting strings into numbers where needed\n          // and converting owners string into a number\n          gameListRef.once('value', snapshot => {\n            const dataObj = snapshot.val();\n            for (const dataKey in dataObj) {\n              const gameRef = gameListRef.child(dataKey);\n              const game = dataObj[dataKey];\n\n              // changes discount value from string to number \n              if (typeof game.discount === 'string') {\n                const gameDiscount = parseInt(game.discount);\n                gameRef.update({\n                  discount: gameDiscount\n                })\n              }\n\n              // changes price from string to number\n              if (typeof game.price === 'string') {\n                const gamePrice = parseInt(game.price);\n                gameRef.update({\n                  price: gamePrice\n                })\n              }\n\n              // averages owner value and converts to number\n              if (typeof game.owners === 'string') {\n                const oldOwners = (game.owners).split(\" .. \");\n                const owners1 = oldOwners[0].replace(/,/g, '');\n                const owners2 = oldOwners[1].replace(/,/g, '');\n                const newOwners = (parseInt(owners1) + parseInt(owners2)) / 2;\n\n                gameRef.update({\n                  owners: newOwners\n                })\n              }\n            }\n          }) \n\n          for (const item in dataObject) {\n            gameListRef.push(dataObject[item]);\n          }\n        }).catch(err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  addToWishlist = (dbKey, game) => {\n    if (this.state.wishlist) { // check state to see if on wishlist\n      if (this.state.wishlist[dbKey]) {\n        alert('Already on wishlist!');\n        return;\n      }\n    } \n    // find references to update\n    const wishlistRef = firebase.database().ref('wishlist');\n    const gameRef = firebase.database().ref(`gameList/${dbKey}/onWishlist`);\n\n    const { name, price, logo_img } = game;\n\n    const wishlistObj = {\n      [dbKey]: [\n        dbKey,\n        name,\n        price,\n        logo_img\n      ]\n    }\n    // update db\n    wishlistRef.update(wishlistObj);\n    gameRef.update({\n      onWishlist: true\n    })\n\n    // update state\n    const stateWishlist = this.state.wishlist;\n    stateWishlist[dbKey] = wishlistObj;\n    this.setState({\n      wishlist: stateWishlist\n    })\n  }\n\n  removeFromWishlist = (dbKey) => {\n    // get both references and state\n    const gameListRef = firebase.database().ref('gameList/' + dbKey);\n    const wishlistRef = firebase.database().ref('wishlist/' + dbKey);\n    const stateWishlist = this.state.wishlist;\n    \n    // change, replace, or delete the three locations\n    delete stateWishlist[dbKey];\n    this.setState({\n      wishlist: stateWishlist\n    })\n    gameListRef.update({\n      onWishlist: false\n    })\n    wishlistRef.set({});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header removeFromWishlist={this.removeFromWishlist} /> \n        <Content addToWishlist={this.addToWishlist} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}